[General]
total-stack = 32MiB
#tkenv-plugin-path = ../../../etc/plugins
#tkenv-plugin-path = /home/hoferr/MasterThesis/Simulation/omnetpp/inetmanet-2.0/etc/plugins
tkenv-plugin-path = ../../inetmanet-2.0/etc/plugins/
sim-time-limit = 1000s
#network = inet.examples.wpan.sixlowpan.NetIPv6over802154
cmdenv-express-mode = true

##############################################################################
### Output vectors #
##############################################################################
record-eventlog 							= true
output-scalar-file-append 					= false
**.End-to-end delay.vector-recording 		= true
**.Mean end-to-end delay.vector-recording 	= true
**.vector-recording 						= true

##############################################################################
### Debug Settings
##############################################################################
debug-on-errors 					= true
**.coreDebug						= false
**.debug							= true
#**.app.debug						= false					
#**.battery.debug					= false
#**.net.debug						= false

##############################################################################
### mobility parameters
##############################################################################
**.mobilityType = "StationaryMobility"
**.mobility.initFromDisplayString = false

##############################################################################
## playground settings
##############################################################################
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0m

##############################################################################
### IP settings
##############################################################################
#**.routingFile = ""
#**.ip.procDelay = 10us
**.IPForward=false

##############################################################################
### TCP settings
##############################################################################
#**.tcp.mss = 1024
#**.tcp.advertisedWindow = 14336 # 14*mss
#**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
#**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
#**.tcp.tcpAlgorithmClass = "TCPReno"
#**.tcp.recordStats = true

##############################################################################
### UDP settings
##############################################################################

##############################################################################
### ARP configuration
##############################################################################
#**.arp.retryTimeout = 1s
#**.arp.retryCount = 3
#**.arp.cacheTimeout = 100s
#**.networklayer.proxyARP = true # Host's is hardwired "false"

##############################################################################
### manet routing
##############################################################################
## Routing currently disabled
#**.routingProtocol="DSRUU"
#**.routingProtocol.use-default=yes

##############################################################################
# Parameters for the network interface and IFqueue #
##############################################################################
**.ifqType = "DropTailQueue"
**.ifq.frameCapacity = 10

##############################################################################
# Parameters for MAC layer #
##############################################################################
**.rxSetupTime = 0.00108s
**.macAckWaitDuration = 0.005s

##############################################################################
# Parameters for PHY layer #
##############################################################################
**.phy.transmitterPower = 1.0mW #[mW]
**.phy.sensitivity = -85dBm #[dBm]
**.phy.thermalNoise = -110dBm #[dBm]
**.phy.pathLossAlpha = 2
**.phy.snirThreshold = 4dB

##############################################################################
# Parameters for the Channel Control #
##############################################################################
# channel physical parameters
*.channelControl.carrierFrequency = 2.4GHz
*.channelControl.pMax = 2.0mW
*.channelControl.sat = -85dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 27
*.channelControl.propagationModel = "FreeSpaceModel"

##############################################################################
# Parameters for the display module in the hosts #
##############################################################################
# display parameters (same as channelcontrol parameters and mac parameters)
**.disp.carrierFrequency = 2.4GHz
#**.disp.pMax = 2.0mW
**.disp.sat = -85dBm #[dBm]
**.disp.alpha = 2
#**.disp.numChannels = 27
**.disp.transmitterPower = 1.0mW #[mW]
**.disp.sensitivity = -85dBm #[dBm]

##############################################################################
# Parameters for the Energy Model (units: mAh and mA) #
##############################################################################
#**.battery.batteryCapacity = 25 #[mAh]
#**.battery.meanTimeToFailure = -1s
#**.battery.usage_radio_idle = 1.38mA #[mA]
#**.battery.usage_radio_recv = 9.6mA #[mA]
#**.battery.usage_radio_sleep = 0.06mA #[mA]
#**.phy.usageCpuActive = 7.6
#**.phy.usageCpuSleep = 0.237 ## 3.3 mA for IDLE mode, 0.237 mA for Standby

**.phy.usage_radio_idle = 1.38mA #[mA]
**.phy.usage_radio_recv = 9.6mA #[mA]
**.phy.usage_radio_sleep = 0.06mA #[mA]

#**.battery.nominal = 1500
#**.battery.capacity = 1500
#**.battery.voltage = 3
#**.battery.resolution = 1s
#**.battery.publishDelta = 0.5
#**.battery.publishTime = 10s

##############################################################################
### Simulation runs
##############################################################################

[Config SG_MANUALMULTIHOP_001]
network = SG_LRWPAN_001
description= "Test Smart Grid with LRWPAN DC and four nodes in one hop distance subnet"

##############################################################################
## playground settings
##############################################################################
**.numNodes = 10

**.constraintAreaMaxX = ${widthX=1000m}
**.constraintAreaMaxY = ${widthY=${widthX}} # square area
#**.constraintAreaMaxY = ${widthY=2000m} # rectangle area

**.dc.mobility.initialX       = ${widthX}/2 # dc in centre (probably unrealistic but should be optimal)
**.dc.mobility.initialY       = ${widthY}/2 # dc in centre (probably unrealistic but should be optimal)
#**.dc.mobility.initialX       = uniform(0m,${widthX}) # dc randomly placed (more realistic, but not deterministic)
#**.dc.mobility.initialY       = uniform(0m,${widthY}) # dc randomly placed (more realistic, but not deterministic)
#**.node[*].mobility.initialX       = uniform(0m,${widthX})
#**.node[*].mobility.initialY       = uniform(0m,${widthY})
**.node[0].mobility.initialX       = ${widthX}/3
**.node[0].mobility.initialY       = ${widthY}/3
**.node[1].mobility.initialX       = ${widthX}/5
**.node[1].mobility.initialY       = ${widthY}-${widthY}/5
**.node[2].mobility.initialX       = ${widthX}-${widthX}/5
**.node[2].mobility.initialY       = ${widthY}/5
**.node[3].mobility.initialX       = ${widthX}-${widthX}/4
**.node[3].mobility.initialY       = ${widthY}/2

##############################################################################
## app settings
##############################################################################

##############################################################################
# udp settings
##############################################################################

**.numUdpApps = 1

**.node[*].udpApp[0].typename = "UDPBasicApp"
**.node[*].udpApp[0].destAddresses = "dc"
**.node[*].udpApp[0].destPort = 1000
#**.node[*].udpApp[0].messageLength = 50B    # Ok
**.node[*].udpApp[0].messageLength = 54B    # Ok
#**.node[*].udpApp[0].messageLength = 55B    # Nok
#**.node[*].udpApp[0].messageLength = 100B   # Nok
**.node[*].udpApp[0].startTime = 5s
#**.node[*].udpApp[0].startTime = 5s + uniform(0s,1s)
**.node[*].udpApp[0].sendInterval = 1s
**.node[*].udpApp[0].stopTime = 10s

**.dc.udpApp[0].typename = "UDPEchoApp"
**.dc.udpApp[0].localPort = 1000

[Config SG_ONEHOP_001]
network = SG_LRWPAN_001
description= "Test Smart Grid with LRWPAN DC and four nodes in one hop distance subnet"

##############################################################################
## playground settings
##############################################################################
**.numNodes = 4

**.dc.routingTable = xml("<juhu/>")

**.constraintAreaMaxX = ${widthX=10m,100m,1000m}
**.constraintAreaMaxY = ${widthY=${widthX}} # square area
#**.constraintAreaMaxY = ${widthY=2000m} # rectangle area

**.dc.mobility.initialX       = ${widthX}/2 # dc in centre (probably unrealistic but should be optimal)
**.dc.mobility.initialY       = ${widthY}/2 # dc in centre (probably unrealistic but should be optimal)
#**.dc.mobility.initialX       = uniform(0m,${widthX}) # dc randomly placed (more realistic, but not deterministic)
#**.dc.mobility.initialY       = uniform(0m,${widthY}) # dc randomly placed (more realistic, but not deterministic)
#**.node[*].mobility.initialX       = uniform(0m,${widthX})
#**.node[*].mobility.initialY       = uniform(0m,${widthY})
**.node[0].mobility.initialX       = ${widthX}/3
**.node[0].mobility.initialY       = ${widthY}/3
**.node[1].mobility.initialX       = ${widthX}/5
**.node[1].mobility.initialY       = ${widthY}-${widthY}/5
**.node[2].mobility.initialX       = ${widthX}-${widthX}/5
**.node[2].mobility.initialY       = ${widthY}/5
**.node[3].mobility.initialX       = ${widthX}-${widthX}/4
**.node[3].mobility.initialY       = ${widthY}/2

##############################################################################
## app settings
##############################################################################

##############################################################################
# udp settings
##############################################################################

**.numUdpApps = 1

**.node[*].udpApp[0].typename = "UDPBasicApp"
**.node[*].udpApp[0].destAddresses = "dc"
**.node[*].udpApp[0].destPort = 1000
#**.node[*].udpApp[0].messageLength = 50B    # Ok
**.node[*].udpApp[0].messageLength = 54B    # Ok
#**.node[*].udpApp[0].messageLength = 55B    # Nok
#**.node[*].udpApp[0].messageLength = 100B   # Nok
**.node[*].udpApp[0].startTime = 5s
#**.node[*].udpApp[0].startTime = 5s + uniform(0s,1s)
**.node[*].udpApp[0].sendInterval = 1s
**.node[*].udpApp[0].stopTime = 10s

**.dc.udpApp[0].typename = "UDPEchoApp"
**.dc.udpApp[0].localPort = 1000

##############################################################################
## routing settings
##############################################################################
#**.dc.routingTable = xml("<config><interface among='dc' address='10.0.1.x' netmask='255.255.255.0'/>\
#   <interface hosts='dc' names='eth1' address='10.0.2.x' netmask='255.255.255.0'/>\
#   <interface hosts='host0' address='10.0.2.x' netmask='255.255.255.0'/>\
#   <route hosts='host0' interface='wlan0' destination='*' gateway='router>ap'/>\
#   </config>")



[Config SG_SINGLENODE_001]
network = SG_LRWPAN_001
description= "Test Smart Grid with LRWPAN DC and one node"

##############################################################################
## playground settings
##############################################################################
**.numNodes = 1

**.constraintAreaMaxX = ${widthX=100m}
**.constraintAreaMaxY = ${widthY=${widthX}} # square area
#**.constraintAreaMaxY = ${widthY=2000m} # rectangle area

**.dc.mobility.initialX       = 20m # dc in centre (probably unrealistic but should be optimal)
**.dc.mobility.initialY       = ${widthY}/2 # dc in centre (probably unrealistic but should be optimal)
#**.dc.mobility.initialX       = uniform(0m,${widthX}) # dc randomly placed (more realistic, but not deterministic)
#**.dc.mobility.initialY       = uniform(0m,${widthY}) # dc randomly placed (more realistic, but not deterministic)
#**.node[*].mobility.initialX       = uniform(0m,${widthX})
#**.node[*].mobility.initialY       = uniform(0m,${widthY})
**.node[0].mobility.initialX       = 80m
**.node[0].mobility.initialY       = ${widthY}/2

##############################################################################
## app settings
##############################################################################

##############################################################################
# udp settings
##############################################################################

**.numUdpApps = 1

**.node[*].udpApp[0].typename = "UDPBasicApp"
**.node[*].udpApp[0].destAddresses = "dc"
**.node[*].udpApp[0].destPort = 1000
#**.node[*].udpApp[0].messageLength = 50B    # Ok
**.node[*].udpApp[0].messageLength = 54B    # Ok
#**.node[*].udpApp[0].messageLength = 55B    # Nok
#**.node[*].udpApp[0].messageLength = 100B   # Nok
**.node[*].udpApp[0].startTime = 5s
**.node[*].udpApp[0].sendInterval = 1s
**.node[*].udpApp[0].stopTime = -1s

**.dc.udpApp[0].typename = "UDPEchoApp"
**.dc.udpApp[0].localPort = 1000


[Config SG_LRWPAN_001]
network = SG_LRWPAN_001
description= "Test Smart Grid with LRWPAN subnet"

##############################################################################
## playground settings
##############################################################################
**.numNodes = 50

**.constraintAreaMaxX = ${widthX=1000m}
**.constraintAreaMaxY = ${widthY=${widthX}} # square area
#**.constraintAreaMaxY = ${widthY=2000m} # rectangle area

**.dc.mobility.initialX       = ${widthX}/2 # dc in centre (probably unrealistic but should be optimal)
**.dc.mobility.initialY       = ${widthY}/2 # dc in centre (probably unrealistic but should be optimal)
#**.dc.mobility.initialX       = uniform(0m,${widthX}) # dc randomly placed (more realistic, but not deterministic)
#**.dc.mobility.initialY       = uniform(0m,${widthY}) # dc randomly placed (more realistic, but not deterministic)
**.node[*].mobility.initialX       = uniform(0m,${widthX})
**.node[*].mobility.initialY       = uniform(0m,${widthY})

##############################################################################
## app settings
##############################################################################

##############################################################################
# udp settings
##############################################################################

**.numUdpApps = 1

**.node[*].udpApp[0].typename = "UDPBasicApp"
**.node[*].udpApp[0].destAddresses = "dc"
**.node[*].udpApp[0].destPort = 1000
#**.node[*].udpApp[0].messageLength = 50B    # Ok
**.node[*].udpApp[0].messageLength = 54B    # Ok
#**.node[*].udpApp[0].messageLength = 55B    # Nok
#**.node[*].udpApp[0].messageLength = 100B   # Nok
**.node[*].udpApp[0].startTime = 5s
**.node[*].udpApp[0].sendInterval = 1s
**.node[*].udpApp[0].stopTime = -1s

**.dc.udpApp[0].typename = "UDPEchoApp"
**.dc.udpApp[0].localPort = 1000

##############################################################################
# ping settings
##############################################################################

#**.node[*].numPingApps = 1
##**.node[*].printPing = true
#**.node[*].pingApp[*].typename = "PingApp"
##**.node[*].pingApp[*].srcAddr = "dc"
#**.node[*].pingApp[0].destAddr = "dc"
#**.node[*].pingApp[0].sendInterval = 1s
#**.node[*].pingApp[0].startTime = 4s
#**.node[*].pingApp[0].stopTime = 14s
##**.node[*].pingApp[0].packetSize = 300B

##############################################################################
## routing settings
##############################################################################


